version: '2.1'

services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    container_name: zoo1
    ports:
      - '2181:2181'
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/data
      - ./zk-single-kafka-single/zoo1/datalog:/datalog

  kafka1:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka1
    container_name: kafka1
    ports:
      - '9092:9092'
      # - '9999:9999'
    environment:
      # KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181'
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=TRACE,kafka.producer.async.DefaultEventHandler=TRACE,state.change.logger=TRACE'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      # KAFKA_JMX_PORT: 9999
      KAFKA_CREATE_TOPICS: 'demo-topic:2:4'
      # KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1

  kafka2:
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka2
    container_name: kafka2
    ports:
      - '9093:9093'
    environment:
      # KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19093,LISTENER_DOCKER_EXTERNAL://kafka2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: 'zoo1:2181'
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: 'kafka.controller=TRACE,kafka.producer.async.DefaultEventHandler=TRACE,state.change.logger=TRACE'
    volumes:
      - ./zk-single-kafka-single/kafka2/data:/var/lib/kafka/data
    depends_on:
      - zoo1

  kafkajs-consumer:
    build:
      context: ./kafkajs-consumer
      dockerfile: ./Dockerfile
    image: cluster/kafkajs-consumer:latest
    hostname: kafkajs-consumer
    container_name: kafkajs-consumer
    depends_on:
      - kafka1

  kafkajs-producer:
    build:
      context: ./kafkajs-producer
      dockerfile: ./Dockerfile
    image: cluster/kafkajs-producer:latest
    hostname: kafkajs-producer
    container_name: kafkajs-producer
    depends_on:
      - kafka1
      - kafkajs-consumer

  # just node demo
  docker-node-hello-world:
    build:
      context: ./docker-node-hello-world
      dockerfile: ./Dockerfile
    image: cluster/docker-node-hello-world:latest
    hostname: docker-node-hello-world
    container_name: docker-node-hello-world
    ports:
      - '4000:4000'
